import math
import sympy
import numpy as np
import time
import mysql.connector
from tkinter import *
import tkinter as tk
import datetime
from matplotlib.patches import Circle
import matplotlib.pyplot as plt
import keyboard
import tkinter.font as tkfont

running = False  # Global flag
x = 0
d_running = False  # Global flag
count = 0
game_id = 1 
data_id = 0
d_myresult = ''
myresultlist = []
plt.ion()
fig = plt.figure(figsize=(10,10)) 
ax = fig.gca()
A=[0,0]
B=[590,0]
C=[0,480]
olddata = []
speed = 1
count2 = 1


# map = 590x480 /5 = 118x96
# sign: ←↑→↓↰↱↲↳
#
# 118x96 單位=5公分
#
#            1        10        20        30        40        50        60        70        80        90        100       110     118
#            ↓        ↓         ↓         ↓         ↓         ↓         ↓         ↓         ↓         ↓         ↓         ↓       ↓
gamemap = [["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           ["......................................................................................................................"],
           [".......→.............................................................................................................."],
           ["......↓..............................................................................................................."],
           [".....←................................................................................................................"],
           ["....↑................................................................................................................."],
           ["...↱.................................................................................................................."],
           ["..↰..................................................................................................................."],
           [".↲...................................................................................................................."],
           ["↱....................................................................................................................."],]
#       (0,0)

gamemap.reverse() # 讓左下角為(0,0)


###   設定xy軸的數值   ###
def basic():
    global ax
    ax.set_xticks(np.arange(0, 590, 10)) 
    ax.set_yticks(np.arange(0, 480, 10))
    plt.xticks(fontsize=5)
    plt.yticks(fontsize=5)
    plt.grid(True)
    plt.scatter(A[0],A[1])
    plt.text(A[0],A[1],"A")
    plt.scatter(B[0],B[1])
    plt.text(B[0],B[1],"B")
    plt.scatter(C[0],C[1])
    plt.text(C[0],C[1],"C")

    

                        
###   算角度   ###    
def angle(v1, v2):
    dx1 = v1[2] - v1[0] # x差 
    dy1 = v1[3] - v1[1] # y差
    dx2 = v2[2] - v2[0] # x差
    dy2 = v2[3] - v2[1] # y差
    angle1 = math.atan2(dy1, dx1)
    angle1 = int(angle1 * 180/math.pi)
    #print(angle1)
    angle2 = math.atan2(dy2, dx2)
    angle2 = int(angle2 * 180/math.pi)
    #print(angle2)
    if angle1*angle2 >= 0:
        if v1[2]-v2[0] >=0:
            included_angle = abs(angle1-angle2)
        elif v1[2]-v2[0] <0:
            included_angle = 360-abs(angle1-angle2)
    else:
        included_angle = abs(angle1) + abs(angle2)

    return included_angle
    

###   連接資料庫   ###

# 取得所有回傳資料    
def connect(sql):
    global d_myresult
    mydb = mysql.connector.connect(
      host="localhost",
      user="root",
      passwd="",
      database="test"
    )
    mycursor = mydb.cursor()
    mycursor.execute(sql)
    d_myresult = mycursor.fetchall()
    return d_myresult


# 只取game_id
def connect2(sql):
    global myresultlist
    mydb = mysql.connector.connect(
      host="localhost",
      user="root",
      passwd="",
      database="test"
    )
    mycursor = mydb.cursor()
    mycursor.execute(sql) 
    myresultlist = mycursor.fetchone()
    return myresultlist
    



###   畫出x,y   ###
def draw():
            
    
    global labelflow, labelspeed, speed, labeldegree, running, d_myresult, count, data_id, d_sql, ax, count2
    
    time.sleep(1) # 測試用
    if d_running and len(d_myresult) > count: # 若按下draw並且資料數量足夠
        
        x_1 = round(d_myresult[count][2]) # x座標四捨五入
        y_1 = round(d_myresult[count][3]) # y座標四捨五入
        data_id = d_myresult[count][0]
        count += 1     
        basic()
        count4 = 1
 
    
        # 用藍色畫出前面10個座標，並用漸層區別
        for c in olddata:         
            
            if c == None:
                break
                        
            elif len(olddata) > 10: 
                count3 = 1
                for k in olddata[-10:]:
                    plt.scatter(k[0],k[1],70,"blue",alpha =0.1*count3)
                    count3 += 1
                break
                    
            elif len(olddata) <= 10:
                plt.scatter(c[0],c[1],70,"blue",alpha =0.1*count4)
                count4 += 1
            
            
        # 紅色畫出最新座標        
        plt.scatter(x_1,y_1,30,"red",alpha = 1) 
        plt.annotate(count2,(x_1,y_1),xytext=(x_1+40,y_1+40), fontsize=10, arrowprops=dict(arrowstyle='->', lw = 1))

        
        # 用前一點座標和最新座標算出方位角
        if len(olddata) >=1:
            degree =  angle([olddata[-1][0],olddata[-1][1],x_1,y_1],[olddata[-1][0],0,olddata[-1][0],1])
         
        plt.show()
        
        count2 +=1   
        
        # 印出方位角
        if len(olddata) >=1:
            print ("方位角:",degree)
            labeldegree.set("方位角: "+str(degree))
            
        # 洋流影響速度 40為單位
        if len(olddata) >=1:
            x = math.floor(x_1/5)
            y = math.floor(y_1/5)
            if gamemap[y][0][x] == "↑":
                if 0 <= degree < 20 or 340 < degree <= 360: # 加速
                    speed = 1.3
                    print ("速度:",speed,"(順向)")
                    labelspeed.set("速度: "+str(speed)+"(順向)")
                elif 160 < degree < 200: # 減速
                    speed = 0.6
                    print ("速度:",speed,"(逆向)")
                    labelspeed.set("速度: "+str(speed)+"(逆向)")
                else:
                    speed = 1
                    print ("速度:",speed)
                    labelspeed.set("速度: "+str(speed))
                
            elif gamemap[y][0][x] == "←":
                if 250 < degree < 290:
                    speed = 1.3
                    print ("速度:",speed,"(順向)")
                    labelspeed.set("速度: "+str(speed)+"(順向)")
                elif 70 < degree < 110:
                    speed = 0.6
                    print ("速度:",speed,"(逆向)")
                    labelspeed.set("速度: "+str(speed)+"(逆向)")
                else:
                    speed = 1
                    print ("速度:",speed)
                    labelspeed.set("速度: "+str(speed))
            elif gamemap[y][0][x] == "↓":
                if 160 < degree < 200:
                    speed = 1.3
                    print ("速度:",speed,"(順向)")
                    labelspeed.set("速度: "+str(speed)+"(順向)")
                elif 0 <= degree < 20 or 340 < degree <= 360: 
                    speed = 0.6
                    print ("速度:",speed,"(逆向)")
                    labelspeed.set("速度: "+str(speed)+"(逆向)")
                else:
                    speed = 1
                    print ("速度:",speed)
                    labelspeed.set("速度: "+str(speed))
            elif gamemap[y][0][x] == "→":
                if 70 < degree < 110:
                    speed = 1.3
                    print ("速度:",speed,"(順向)")
                    labelspeed.set("速度: "+str(speed)+"(順向)")
                elif 250 < degree < 290:
                    speed = 0.6
                    print ("速度:",speed,"(逆向)")
                    labelspeed.set("速度: "+str(speed)+"(逆向)")
                else:
                    speed = 1
                    print ("速度:",speed)
                    labelspeed.set("速度: "+str(speed))
            elif gamemap[y][0][x] == "↱":
                if 25 < degree < 65:
                    speed = 1.3
                    print ("速度:",speed,"(順向)")
                    labelspeed.set("速度: "+str(speed)+"(順向)")
                elif 205 < degree < 245:
                    speed = 0.6
                    print ("速度:",speed,"(逆向)")
                    labelspeed.set("速度: "+str(speed)+"(逆向)")
                else:
                    speed = 1
                    print ("速度:",speed)
                    labelspeed.set("速度: "+str(speed))
            elif gamemap[y][0][x] == "↰":
                if 295 < degree < 335:
                    speed = 1.3
                    print ("速度:",speed,"(順向)")
                    labelspeed.set("速度: "+str(speed)+"(順向)")
                elif 115 < degree < 155:
                    speed = 0.6
                    print ("速度:",speed,"(逆向)")
                    labelspeed.set("速度: "+str(speed)+"(逆向)")
                else:
                    speed = 1
                    print ("速度:",speed)
                    labelspeed.set("速度: "+str(speed))
            elif gamemap[y][0][x] == "↲":
                if 205 < degree < 245:
                    speed = 1.3
                    print ("速度:",speed,"(順向)")
                    labelspeed.set("速度: "+str(speed)+"(順向)")
                elif 25 < degree < 65:
                    speed = 0.6
                    print ("速度:",speed,"(逆向)")
                    labelspeed.set("速度: "+str(speed)+"(逆向)")
                else:
                    speed = 1
                    print ("速度:",speed)
                    labelspeed.set("速度: "+str(speed))
            elif gamemap[y][0][x] == "↳":
                if 115 < degree < 155:
                    speed = 1.3
                    print ("速度:",speed,"(順向)")
                    labelspeed.set("速度: "+str(speed)+"(順向)")
                elif 295 < degree < 335:
                    speed = 0.6
                    print ("速度:",speed,"(逆向)")
                    labelspeed.set("速度: "+str(speed)+"(逆向)")
                else:
                    speed = 1
                    print ("速度:",speed)
                    labelspeed.set("速度: "+str(speed))
            elif gamemap[y][0][x] == ".":
                speed = 1
                print ("速度:",speed)
            print ("洋流方向:",gamemap[y][0][x])
            labelflow.set("洋流方向: "+str(gamemap[y][0][x]))
            
            
            
        # 保存座標
        olddata.append((x_1,y_1))

         
    else:
        now = datetime.datetime.now() #現在時間
        if int(now.second) % 2 == 0:
            time.sleep(1)
            print('繪圖更新中')
            if myresultlist == None:
                d_sql = "SELECT * FROM rssi WHERE game_id >= 1 AND id > "+str(data_id)
            else :
                d_sql = "SELECT * FROM rssi WHERE game_id >=" + str(int(myresultlist[0])+1) +" AND id > "+str(data_id)
            
            d_myresult = connect(d_sql)
            count = 0
        
        


###   繪圖開始   ###            
def d_start():
    """Enable scanning by setting the global flag to True."""
    global d_running
    d_running = True
    print('繪圖開始')



###   繪圖停止   ### 
def d_stop():
    """Stop scanning by setting the global flag to False."""
    global d_running
    d_running = False
    print('繪圖停止')



###   清除   ### 
def clear():
    global ax
    plt.clf()
    ax = fig.gca()
    basic()



###   座標加入資料庫設定  ###
    
mydb = mysql.connector.connect(
  host="localhost",
  user="root",
  passwd="",
  database="test"
)
mycursor = mydb.cursor()
sql = "INSERT INTO rssi (game_id, X_axis, Y_axis, Z_axis, A_station, B_station, C_station) VALUES (%s, %s, %s, %s, %s, %s, %s)"
mydb.commit()




###   主程式   ###

xaxis = []
yaxis = []
zaxis = []
astation = []
bstation = []
cstation = []
forcount = 0


def main():
  global firstenter,xaxis,yaxis,caxis,astation,bstation,cstation,forcount,running,x
  
  # 如果資料庫為空，則設定game_id為1，否則加上1
  if myresultlist == None:
      gid = "1"
      firstenter = False
      
  else:
      gid = str(int(myresultlist[0])+1)
      firstenter = False
          
  # 打開儲存座標的記事本並丟到資料庫   
  if running:
      y = 0
      fp = open('test.txt','r')
      line = fp.readline()
      long = len(line)
      
      while line:
          
          if x == y:
              
              if 'x軸' in line:
                  xaxis.append(line[-4:-1])
                  x += 1
                  
              elif 'y軸' in line:
                  yaxis.append(line[-4:-1])
                  x += 1
                
              elif 'z軸' in line:
                  zaxis.append(line[-4:-1])
                  x += 1
                
              elif 'A站' in line:
                  astation.append(line[-4:-1])
                  x += 1
              elif 'B站' in line:
                  bstation.append(line[-4:-1])
                  x += 1
    
              elif 'C站' in line:
                  cstation.append(line[-4:-1])
                  x += 1
                  val = (gid,xaxis[forcount],yaxis[forcount],zaxis[forcount],astation[forcount],bstation[forcount],cstation[forcount])
                  forcount += 1
                  mycursor.execute(sql, val)
                  mydb.commit()
          y += 1
          line = fp.readline()

          
          
###   開始   ###               
def start():
    """Enable scanning by setting the global flag to True."""
    print("開始掃描")
    global running
    running = True


###   停止   ###   
def stop():
    """Stop scanning by setting the global flag to False."""
    print("停止掃描")
    global running
    running = False



root = Tk()
root.title("Title")
root.geometry("240x200")

app = Frame(root)
app.grid()
font1 = tkfont.Font(family="Arial", size=13, weight=tkfont.BOLD)

labeldegree = tk.StringVar()
labeldegree.set("方位角:")
label = Label(app, width=16,  textvariable=labeldegree, font=font1, anchor="w")
label.grid(row=0, column=1, padx=7)

labelspeed = tk.StringVar()
labelspeed.set("速度:")
label2 = Label(app, width=16,  textvariable=labelspeed, font=font1, anchor="w")
label2.grid(row=1, column=1, padx=7)

labelflow = tk.StringVar()
labelflow.set("洋流方向:")
label3 = Label(app, width=16,  textvariable=labelflow, font=font1, anchor="w")
label3.grid(row=2, column=1, padx=7)

start = Button(app, text="開始掃描", command=start)
stop = Button(app, text="停止掃描", command=stop)
d_start = Button(app, text="開始繪圖", command=d_start)
d_stop = Button(app, text="停止繪圖", command=d_stop)
d_clear = Button(app, text="清空地圖", command=clear)
start.grid(row=0, column=0 )
stop.grid(row=1, column=0)
d_start.grid(row=2, column=0)
d_stop.grid(row=3, column=0)
d_clear.grid(row=4, column=0)


# 抓取最後一筆座標的game_id
firstenter = True
if firstenter == True:
    
    sql2 = "SELECT game_id FROM rssi ORDER BY id DESC LIMIT 1" # 抓最後一筆資料的game_id
    connect2(sql2)
    

while True:
    root.update()
    if running:
        main()
        if keyboard.is_pressed("ESC"):
            sys.exit()
        
    if d_running:
        draw()
